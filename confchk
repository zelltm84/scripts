#!/bin/bash
# created by: Zell
#===============================================================================
# variables

#---------------------------------------
# source file

source /usr/local/sbin/stdlib

#---------------------------------------
# common values

LOGNAME=$PROG
LOG=/var/log/$LOGNAME.log
LOGRO=/etc/logrotate.d/$LOGNAME

#===============================================================================
# help text

HELP_TXT="
This script checks for correct syntax for various config files.

SYNTAX:
  # $PROG [OPTIONS]

OPTIONS:
  -h, --help         display this help text and exit
  -l, --log          enable logging to a file
  -v, --verbose      be verbose
  -vv, --debug       turn on debugging (very verbose)
  -dr, --dryrun      do a dry run
  --all              check all configs
  -a, --apache       check apache config
  -n, --nagios       check nagios config
  -o, --omd          check omd config
  -p, --puppet       check puppet site.pp
  -hap, --haproxy    check haproxy config

EXAMPLES:
  Normal operation:  # $PROG
  Dry run:           # $PROG -vv -dr
  Logging:           # $PROG -v --log

NOTES:
  don't combine options:
    correct:         # $PROG -l -vv
    incorrect:       # $PROG -lvv

"

#===============================================================================
# functions

#---------------------------------------
# check messages

f_check () {
SKIP=false
if [[ -f $CFILE ]] ;then
  f_msg "Checking $CFILE ..."
else
  f_msg -w "Skipping check because file does not exist: $CFILE"
  SKIP=true
fi
}

#---------------------------------------
# check apache config

f_apache () {
DIR=/etc/httpd/conf

CFILE=$DIR/httpd.conf
f_check
if [[ $SKIP != true ]] ;then
  f_run "httpd -t -f $CFILE"
fi
}

#---------------------------------------
# check nagios config

f_nagios () {
DIR=/etc/nagios

CFILE=$DIR/nagios.cfg
f_check
if [[ $SKIP != true ]] ;then
  f_run "nagios -v $CFILE"
fi
}

#---------------------------------------
# check omd config

f_omd () {
DIR=/omd/sites/`whoami`/etc/nagios

CFILE=$DIR/nagios.cfg
f_check
if [[ $SKIP != true ]] ;then
  f_run "nagios -v $CFILE"
fi

CFILE=$DIR/nagios.d/omd.cfg
f_check
if [[ $SKIP != true ]] ;then
  f_run "nagios -v $CFILE"
fi
}

#---------------------------------------
# check haproxy config

f_haproxy () {
DIR=/etc/haproxy

CFILE=$DIR/haproxy.cfg
f_check
if [[ $SKIP != true ]] ;then
  f_run "haproxy -c -f $CFILE"
fi
}

#---------------------------------------
# check puppet config

f_puppet () {
DIR=/etc/puppet

CFILE=$DIR/manifests/site.pp
f_check
if [[ $SKIP != true ]] ;then
  f_run "puppet parser validate $CFILE --verbose --debug"
  if [[ $? == 0 ]] ;then
    f_msg "puppet config OK"
  fi
fi
}

#===============================================================================
# script start

#---------------------------------------
# process options

while (( "$#" > 0 )) ;do
  case $1 in
    -h|--help)       f_usage 0                               ;;
    -v|--verbose)    VERBOSE=true ;shift                     ;;
    -l|--log)        LOGGING=true ;shift                     ;;
    -vv|--debug)     VERBOSE=true ;DEBUG=true ;shift         ;;
    -dr|--dryrun)    VERBOSE=true ;DRYRUN=true ;shift        ;;
    --all|"")        TYPE=all ;break                         ;;
    -a|--apache)     TYPE=apache ;break                      ;;
    -n|--nagios)     TYPE=nagios ;break                      ;;
    -o|--omd)        TYPE=omd ;break                         ;;
    -p|--puppet)     TYPE=puppet ;break                      ;;
    -hap|--haproxy)  TYPE=haproxy ;break                     ;;
    *)               f_msg -e "Unkown option(s): $*" ;break  ;;
  esac
done

f_msg -l -d "SCRIPT START"

#---------------------------------------
# arguments

f_msg -d "VERBOSE=$VERBOSE"
f_msg -d "LOGGING=$LOGGING"
f_msg -d "DEBUG=$DEBUG"
f_msg -d "DRYRUN=$DRYRUN"

#---------------------------------------
# error checks

f_vroot  # verify root execution

#===============================================================================
# body

#---------------------------------------
# process TYPE

case $TYPE in
  apache)   f_apache   ;;
  nagios)   f_nagios   ;;
  omd)      f_omd      ;;
  puppet)   f_puppet   ;;
  haproxy)  f_haproxy  ;;
  all)
    f_apache
    f_nagios
    f_omd
    f_puppet
    f_haproxy
  ;;
esac

#===============================================================================
# cleanup

#---------------------------------------
# rotate log

f_logro

#...................
# exit

f_exit
